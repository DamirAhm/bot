const
    Scene = require('node-vk-bot-api/lib/scene'),
    VkBot = require('node-vk-bot-api'),
    Session = require('node-vk-bot-api/lib/session'),
    config = require('config'),
    {
        isAdmin,
        renderAdminMenu
    } = require("./utils/messagePayloading.js"),
    {DataBase} = require("./DataBase/DataBase.js");

module.exports.adminPanelScene = new Scene('adminPanel',
    (ctx) => {
        if (isAdmin(ctx.message.user_id)) {
            ctx.scene.next();
            ctx.reply(renderAdminMenu());
        } else {
            ctx.scene.leave();
            ctx.reply("–¢—ã –Ω–µ –∞–¥–º–∏–Ω —á—Ç–æ–± —Ç–∞–∫–æ–µ –¥–µ–ª–∞—Ç—å")
        }
    },
    (ctx) => {
        switch (ctx.message.body.trim()) {
            case "4": {
                ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞");
                ctx.scene.enter("createClass");
                break;
            }
            case "0": {
                ctx.scene.leave();
                ctx.reply("–ö–∞–∫ —Å–∫–∞–∂–µ—à—å –±–æ—Å—Å");
                break;
            }
            default: {
                ctx.reply("–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ");
                break;
            }
        }
    },
);

module.exports.createClassScene = new Scene('createClass',
    (ctx) => {
        ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∞—Å—Å–∞, —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–π , –±—É–∫–≤–æ–π (A - A, –ë - B, –í - V ...)");
        ctx.scene.next();
    },
    (ctx) => {
        const {message: {body}, scene: {leave, enter}} = ctx;
        const spacelessClassName = body.replace(/\s*/g, "");
        if (/\d+[a-z]/i.test(spacelessClassName)) {
            DataBase.createClass(spacelessClassName)
                .then(result => {
                    if (result) {
                        leave();
                        ctx.reply("–ö–ª–∞—Å—Å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω");
                    } else {
                        ctx.reply("–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å üò≠");
                    } //–∏—Å–ø—Ä–∞–≤–∏—Ç—å (–≤—ã–Ω–µ—Å—Ç–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é\–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Å—Ç–∞—Ä—Ç –≤ —Å—Ü–µ–Ω—É\–µ—â–µ —á—Ç–æ —Ç–æ)
                })
                .catch(err => {
                    console.log(err);
                    ctx.reply("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
                })
        } else {
            enter("createClass");
            ctx.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–∏—Ñ—Ä–∞ –∏ –ø–æ—Ç–æ–º –±—É–∫–≤–∞)");
        }
    },
);

